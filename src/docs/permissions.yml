# tags:
#   name: Permissions
#   description: Permissions management

components:
  schemas:
    Permission:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          description: must be unique
        value:
          type: string
          description: must be unique
        active:
          type: boolean
      example:
        id: 5ebac534954b54139806c112
        name: Admin
        value: admin
        active: true

  responses:

    # Permission already defined
    DuplicatePermission:
      description: Permission duplicate
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Permission already defined

/permissions:
  # create a permission
  post:
    operationId: createPermission
    summary: Create a permission
    description: Only admins can create permissions.
    tags: [Admin]
    security:
      - bearerAuth: []
    parameters:
      - in: query
        name: page
        schema:
          type: integer
          default: 1
        description: page number
      - in: query
        name: size
        schema:
          type: integer
          default: 10
        description: number of items per page
      - in: query
        name: sortBy
        schema:
          type: string
          default: createdAt
        description: sort order
      - in: query
        name: name
        schema:
          type: string
        description: permission name
      - in: query
        name: value
        schema:
          type: string
        description: permission value
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
              value:
                type: string
    responses:
      "201":
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
      "400":
        $ref: '#/components/responses/DuplicatePermission'
      "401":
        $ref: '#/components/responses/Unauthorized'
      "403":
        $ref: '#/components/responses/Forbidden'

  # get all permissions
  get:
    operationId: getPermissions
    summary: Get all permissions
    # description: Only admins can get all permissions.
    tags: [Admin]
    security:
      - bearerAuth: []
    responses:
      "200":
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Permission'
      "401":
        $ref: '#/components/responses/Unauthorized'
      "403":
        $ref: '#/components/responses/Forbidden'

/permissions/{id}:

  parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
      description: Permission ID

  # get a permission
  get:
    operationId: getPermission
    summary: Get a permission
    # description: Only admins can get a permission.
    tags: [Admin]
    security:
      - bearerAuth: []
    responses:
      "200":
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
      "401":
        $ref: '#/components/responses/Unauthorized'
      "403":
        $ref: '#/components/responses/Forbidden'

  # update a permission
  patch:
    operationId: updatePermission
    summary: Update a permission
    description: Only admins can update a permission.
    tags: [Admin]
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            # required:
            #   - name
            #   - value
            #   - active
            properties:
              name:
                type: string
              value:
                type: string
              active:
                type: boolean
    responses:
      "200":
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
      "400":
        $ref: '#/components/responses/DuplicatePermission'
      "401":
        $ref: '#/components/responses/Unauthorized'
      "403":
        $ref: '#/components/responses/Forbidden'

  # delete a permission
  delete:
    operationId: deletePermission
    summary: Delete a permission
    description: Only admins can delete a permission.
    tags: [Admin]
    security:
      - bearerAuth: []
    responses:
      "204":
        description: No Content
      "401":
        $ref: '#/components/responses/Unauthorized'
      "403":
        $ref: '#/components/responses/Forbidden'