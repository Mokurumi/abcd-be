components:
  schemas:

    # Country
    Role:
      type: object
      properties:
        id:
          type: string
        label:
          type: string
        value:
          type: string
        status:
          type: string
      example:
        id: 5ebac534954b54139806c112
        label: Accountant
        value: accountant
        status: Active

    # Permission
    Permission:
      type: object
      properties:
        id:
          type: string
        permissionName:
          type: string
        value:
          type: string
        status:
          type: string
      example:
        id: 5ebac534954b54139806c112
        permissionName: Admin
        value: Active
        status: Active

    # User
    User:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        mobileNumber:
          type: string
        prefix:
          type: string
        country:
          type: string
        countryName:
          type: string
        companyId:
          type: string
        companyRole:
          type: string
        membership:
          type: string
        userType:
          type: string
          enum: [JOB_SEEKER, EMPLOYER, SUPER_ADMIN]
        role:
          type: string
          enum: [user, admin]
        tnc:
          type: boolean
        permission:
          type: object
        password:
          type: password
      example:
        id: 5ebac534954b54139806c112
        firstName: John
        middleName: Doe
        lastName: Raphael
        email: fake@example.com
        mobileNumber: 7xxxxxx
        prefix: +254
        country: 5ebac534954b54139806c112
        countryName: Kenya
        companyId: 5ebac534954b54139806c112
        companyRole: MANAGER
        membership: FREE
        userType: JOB_SEEKER
        role: admin
        tnc: true
        permission: ["CAN_VIEW_DASHBOARD"]
        password: xxxxxxxx

    # Upload:
    #   type: object
    #   properties:
    #     id:
    #       type: string
    #     doc:
    #       type: string
    #     docType:
    #       type: string
    #     isMain:
    #       type: string
    #     userId:
    #       type: string
    #   example:
    #     id: 5ebac534954b54139806c112
    #     doc: https://firebasestorage.googleapis.com/v0/b/felix-oduor.appspot.com/o/New%20Project%20
    #     docType: RESUME
    #     isMain: true
    #     userId: 5ebac534954b54139806c112

    # Token
    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    # AuthTokens
    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    # Error
    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:

    # Permission already defined
    DuplicatePermission:
      description: Permission already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Permission already taken

    # Role already defined
    DuplicateRole:
      description: Role already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Role already taken

    # Email already taken
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken

    # Duplicate User
    DuplicateUser:
      description: User already exists
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: User already exists

    # DuplicateOtpCode:
    #   description: Code has expired
    #   content:
    #     application/json:
    #       schema:
    #         $ref: '#/components/schemas/Error'
    #       example:
    #         code: 400
    #         message: Code has expired

    # Unauthorized:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate

    # Forbidden:
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden

    # BadRequest:
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  # Security Schemes
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
