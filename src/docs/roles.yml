# tags:
#   name: Roles
#   description: Roles management

components:
  schemas:
    Roles:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        value:
          type: string
        active:
          type: boolean
        permissions:
          type: array
          items:
            type: string
      example:
        id: 5ebac534954b54139806c112
        name: Admin
        value: admin
        active: true
        permissions:
          - 'CREATE_USER'
          - 'READ_USER'

  responses:

    # Role already defined
    DuplicateRole:
      description: Role duplicate
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Role already defined

/roles:
  # create a role
  post:
    operationId: createRole
    summary: Create a role
    description: Only admins can create roles.
    tags: [Admin]
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
              value:
                type: string
              permissions:
                type: array
                items:
                  type: string
            # example:
            #   name: Admin
            #   value: admin
            #   permissions:
            #     - 5ebac534954b54139806c112
            #     - 5ebac534954b54139806c112
    responses:
      "201":
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Roles'
      "400":
        $ref: '#/components/responses/DuplicateRole'
      "401":
        $ref: '#/components/responses/Unauthorized'
      "403":
        $ref: '#/components/responses/Forbidden'

  # get all roles
  get:
    operationId: getRoles
    summary: Get all roles
    # description: Only admins can get all roles.
    tags: [Admin]
    security:
      - bearerAuth: []
    parameters:
      - in: query
        name: page
        schema:
          type: integer
          default: 1
        description: page number
      - in: query
        name: size
        schema:
          type: integer
          default: 10
        description: number of items per page
      - in: query
        name: sortBy
        schema:
          type: string
          default: createdAt
        description: sort order
      - in: query
        name: name
        schema:
          type: string
        description: role name
      - in: query
        name: value
        schema:
          type: string
        description: role value
    responses:
      "200":
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Roles'
      "401":
        $ref: '#/components/responses/Unauthorized'
      "403":
        $ref: '#/components/responses/Forbidden'
      "404":
        $ref: '#/components/responses/NotFound'

/roles/{id}:
  parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
      description: Role ID

  # get a role
  get:
    operationId: getRole
    summary: Get a role
    # description: Only admins can get roles.
    tags: [Admin]
    security:
      - bearerAuth: []
    responses:
      "200":
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Roles'
      "401":
        $ref: '#/components/responses/Unauthorized'
      "403":
        $ref: '#/components/responses/Forbidden'
      "404":
        $ref: '#/components/responses/NotFound'

  # update a role
  patch:
    operationId: updateRole
    summary: Update a role
    description: Only admins can update roles.
    tags: [Admin]
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            # required:
            #   - name
            #   - value
            #   - active
            #   - permissions
            properties:
              name:
                type: string
                description: must be unique
              value:
                type: string
              active:
                type: boolean
              permissions:
                type: array
                items:
                  type: string
    responses:
      "200":
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Roles'
      "400":
        $ref: '#/components/responses/DuplicateRole'
      "401":
        $ref: '#/components/responses/Unauthorized'
      "403":
        $ref: '#/components/responses/Forbidden'
      "404":
        $ref: '#/components/responses/NotFound'

  # delete a role
  delete:
    operationId: deleteRole
    summary: Delete a role
    description: Only admins can delete roles.
    tags: [Admin]
    security:
      - bearerAuth: []
    responses:
      "204":
        description: No Content
      "401":
        $ref: '#/components/responses/Unauthorized'
      "403":
        $ref: '#/components/responses/Forbidden'
      "404":
        $ref: '#/components/responses/NotFound'
